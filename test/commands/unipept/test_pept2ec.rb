require_relative '../../../lib/commands'

module Unipept
  class UnipeptPept2ecTestCase < Unipept::TestCase
    def test_default_batch_size
      command = Cri::Command.define { name 'pept2ec' }
      pept2ec = Commands::Pept2ec.new({ host: 'http://api.unipept.ugent.be' }, [], command)
      assert_equal(1000, pept2ec.default_batch_size)
      pept2ec.options[:all] = true
      assert_equal(100, pept2ec.default_batch_size)
    end

    def test_required_fields
      command = Cri::Command.define { name 'pept2ec' }
      pept2ec = Commands::Pept2ec.new({ host: 'http://api.unipept.ugent.be' }, [], command)
      assert_equal(['peptide'], pept2ec.required_fields)
    end

    def test_argument_batch_size
      command = Cri::Command.define { name 'pept2ec' }
      pept2ec = Commands::Pept2ec.new({ host: 'http://api.unipept.ugent.be', batch: '123' }, [], command)
      assert_equal(123, pept2ec.batch_size)
    end

    def test_batch_size
      command = Cri::Command.define { name 'pept2ec' }
      pept2ec = Commands::Pept2ec.new({ host: 'http://api.unipept.ugent.be' }, [], command)
      assert_equal(1000, pept2ec.batch_size)
    end

    def test_help
      out, _err = capture_io_while do
        assert_raises SystemExit do
          Commands::Unipept.run(%w[pept2ec -h])
        end
      end
      assert(out.include?('show help for this command'))

      out, _err = capture_io_while do
        assert_raises SystemExit do
          Commands::Unipept.run(%w[pept2ec --help])
        end
      end
      assert(out.include?('show help for this command'))
    end

    def test_run
      out, err = capture_io_while do
        Commands::Unipept.run(%w[pept2ec --host http://api.unipept.ugent.be AALTER])
      end
      lines = out.each_line
      assert_equal('', err)
      assert(lines.next.start_with?('peptide,total_protein_count,ec_number,ec_protein_count'))
      assert(lines.next.start_with?('AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'))
      assert_raises(StopIteration) { lines.next }
    end

    def test_run_with_fasta_multiple_batches
      out, err = capture_io_while do
        Commands::Unipept.run(%w[pept2ec --host http://api.unipept.ugent.be --batch 2 >test AALTER AALER >tost AALTER])
      end
      lines = out.each_line
      assert_equal('', err)
      assert(lines.next.start_with?('fasta_header,peptide,total_protein_count,ec_number,ec_protein_count'))
      assert(lines.next.start_with?('>test,AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'))
      assert(lines.next.start_with?('>test,AALER,41797,2.3.1.9 6.1.1.16 2.7.7.38 1.3.5.1 2.7.7.7 2.1.2.10 6.3.4.2 3.1.-.- 2.3.1.16 6.3.5.3 3.6.4.12 2.7.13.3 2.2.1.1 2.1.1.191 2.6.1.- 2.7.7.- 6.1.1.7 5.3.1.5 4.2.1.2 1.18.1.- 4.2.1.19 3.5.4.26 1.1.1.193 5.2.1.8 6.1.1.9 3.6.1.- 2.1.1.- 2.4.2.18 4.1.1.48 1.11.1.7 3.4.24.- 3.1.1.4 2.6.1.11 2.5.1.72 2.6.1.76 5.99.1.3 3.1.3.16 3.6.3.- 3.1.21.3 5.4.99.27 2.3.1.180 2.8.1.7 2.1.1.297 1.1.1.3 5.4.3.8 3.6.3.14 4.3.1.19 3.1.11.6 1.1.1.23 2.7.7.85 1.2.1.88 2.1.1.174 4.2.99.18 2.1.3.15 2.3.1.179 2.7.7.6 1.5.5.2 2.2.1.9 3.1.4.- 6.1.1.6 1.20.4.1 3.6.4.- 3.5.1.5 3.1.1.5 6.1.1.20 2.4.1.21 3.4.11.1 1.1.1.94 2.7.8.7 4.99.1.1 1.6.5.11 3.4.11.10 3.6.-.- 5.4.99.2 3.1.1.61 4.2.1.20 6.5.1.1 6.1.1.- 4.2.2.n1 2.7.7.59 2.7.7.89 3.2.2.27 1.2.1.27 4.2.1.126 5.1.3.11 2.7.7.42 6.1.1.17 2.9.1.1 1.14.99.29 3.6.3.17 2.1.1.198 2.5.1.75 3.5.4.2 1.2.1.- 4.1.3.27 3.1.4.16 1.4.3.16 2.6.1.9 3.4.-.- 6.5.1.2 1.-.-.- 1.14.13.- 2.6.1.16 6.3.4.19 2.4.99.16 6.2.1.5 6.1.1.18 1.5.1.20 1.2.4.1 4.1.1.20 3.1.11.5 6.1.1.1 2.7.9.1 3.1.1.31 2.3.1.234 3.4.21.- 2.2.1.6 4.2.1.46 4.1.99.22 2.1.2.9 6.3.5.1 1.3.1.9 6.1.1.5 4.2.1.1 3.6.4.13 4.1.1.31 4.1.1.47 2.7.4.1 3.1.3.12 4.2.1.24 2.7.11.1 2.6.1.62 3.1.26.- 3.1.26.4 2.5.1.61 6.3.2.13 5.3.1.24 2.3.1.- 3.4.19.12 2.7.1.25 2.3.1.157 1.8.99.2 3.4.21.53 5.3.1.9 3.7.1.3 6.3.2.2 2.5.1.17 3.4.11.2 1.3.99.- 2.7.7.23 3.5.1.4 4.3.1.3 2.7.1.71 2.3.3.9 6.3.5.5 3.6.5.- 3.1.13.1 6.3.2.4 6.3.2.1 2.1.1.197 1.3.99.1 2.7.1.130 2.7.1.100 2.7.3.9 4.1.3.40 6.1.1.19 1.7.-.- 2.3.1.30 2.7.1.23 4.1.1.86 3.6.3.41 2.3.2.31 1.11.1.15 4.2.3.4 6.1.1.3 4.2.1.113 2.4.2.21 3.1.26.3 1.8.4.11 2.4.1.- 1.4.1.13 3.1.4.52 2.7.4.16 4.2.1.17 2.7.7.4 1.4.99.6 1.4.3.5 6.1.1.2 2.4.2.17 3.4.25.1 6.3.2.- 3.1.3.- 6.2.1.3 2.7.1.180 2.7.1.167 4.6.1.1 4.3.2.1 2.7.7.56 2.7.7.70 5.1.1.8 3.1.1.- 2.3.1.20 4.1.1.32 2.4.1.25 5.4.99.15 4.2.1.33 2.7.6.5 2.1.1.182 2.7.1.- 2.7.1.2 5.99.1.2 3.2.1.23 1.1.1.100 2.1.3.- 1.5.8.4 1.4.7.1 2.1.1.228 2.3.1.94 2.3.1.41 2.3.1.39 2.7.1.15 2.7.1.30 2.7.1.24 2.3.1.181 2.4.1.182 2.4.-.- 1.3.98.3 3.6.3.28 2.7.7.3 6.3.5.9 2.5.1.- 2.6.1.37 5.3.3.2 3.1.26.8 4.2.2.- 3.2.1.21 1.1.1.25 1.1.1.157 1.17.1.8 2.10.1.1 3.2.2.4 3.2.2.- 2.7.7.18 6.3.5.11 5.3.1.23 3.5.1.2 3.5.1.- 6.3.1.1 4.3.1.7 2.3.1.47 3.6.1.7 1.2.4.4 4.1.1.36 3.4.16.4 1.13.12.4 2.4.1.129 3.2.1.- 2.6.1.1 6.2.1.30 2.1.1.72 2.1.1.33 3.2.2.23 3.5.1.94 2.4.1.227 6.3.5.7 1.3.1.- 1.2.1.38 1.2.1.12 4.2.1.109 6.3.4.18 2.4.2.4 2.4.2.- 2.1.1.107 6.3.2.5 3.1.3.6 3.5.4.16 4.2.1.- 1.1.1.133 1.1.1.37 6.3.2.10 6.3.2.17 1.2.1.2 1.5.8.3 4.3.3.7 3.6.3.4 1.1.1.267 5.4.99.- 2.7.7.77 4.1.-.- 2.3.1.1 2.1.1.298 1.5.1.2 3.5.2.3 1.1.1.- 2.3.1.29 3.1.1.29 2.3.1.35 2.7.1.35 2.7.1.26 1.14.14.18 1.8.1.9 5.4.99.12 2.4.1.173 2.4.1.57 1.4.1.2 2.7.4.9 3.1.3.48 5.1.3.2 3.5.1.28 3.6.3.25 2.1.1.37 4.2.1.10 3.1.11.1 3.5.1.98 2.7.7.2 4.1.2.- 2.7.11.5 2.7.-.- 1.2.1.70 4.2.1.70 6.1.1.4 2.7.6.3 2.4.2.19 1.4.4.2 1.6.99.5 5.99.1.4 3.6.1.31 2.4.99.17 3.1.3.3 3.1.3.5 3.2.1.52 2.5.1.48 3.5.4.25 6.6.1.2 1.3.3.4 1.1.1.49 1.1.1.40 3.4.21.92 2.8.1.13 3.6.3.8 3.6.3.3 2.7.3.- 2.7.7.48 2.7.7.72 2.7.7.60 2.7.7.65 1.3.5.4 6.1.1.22 6.1.1.15 6.1.1.10 2.7.2.4 5.1.1.1 4.1.99.3 1.7.99.4 2.3.1.31 3.-.-.- 2.7.1.33 2.7.1.36 3.1.6.1 2.7.1.40 2.7.1.45 2.3.1.225 1.14.-.- 4.1.1.37 4.1.1.23 4.1.1.49 1.1.2.3 2.7.7.87 1.7.1.13 1.8.1.4 5.4.99.16 1.17.99.6 2.4.1.54 5.4.2.7 5.4.99.25 5.4.99.61 2.7.4.23 1.4.1.1 2.7.4.25 5.1.1.11 6.2.1.13 1.1.99.14 1.13.11.27 3.5.1.10 3.6.3.54 3.5.1.46 5.3.1.1 4.2.1.32 1.3.8.7 2.1.1.14 1.3.8.4 4.4.1.1 3.7.1.- 4.1.99.17 3.5.1.87 3.5.1.88 2.8.1.8 2.1.2.3 2.1.2.2 1.14.11.- 6.3.5.- 2.4.1.301 1.4.3.- 1.2.7.8 5.4.4.2 1.14.13.7 1.17.7.3 4.2.1.75 1.2.1.10 4.2.1.138 4.2.1.136 2.6.1.83 2.6.1.85 6.3.4.13 3.1.2.6 2.4.2.10 1.1.-.- 2.4.2.30 2.1.1.166 1.6.99.3 3.1.26.5 2.1.1.131 6.3.2.8 6.3.2.9 5.1.99.6 3.2.1.141 2.1.1.192 2.7.13.- 2.5.1.10 3.6.1.11 2.5.1.18 2.5.1.15 3.4.11.- 4.6.1.12 2.5.1.78 2.5.1.47 3.5.4.10 3.5.4.19 3.2.1.28 3.5.4.9 4.2.1.8 1.1.1.22 1.1.1.27 1.1.1.47 6.3.2.12 6.3.3.2 6.3.3.3 1.1.1.60 1.17.1.4 1.2.1.3 3.6.5.n1 2.7.1.165 2.3.2.3 2.7.1.148 3.4.14.- 3.4.14.4 4.3.3.6 3.6.3.5 1.4.1.21 1.1.1.262 3.1.4.11 2.7.7.49 5.3.1.16 2.1.1.200 3.6.4.4 2.1.1.269 6.1.1.23 6.1.1.14 3.5.2.5 3.5.1.1 2.3.1.15 5.1.1.- 4.1.99.1 3.1.1.2 3.1.1.3 2.1.3.12 5.4.2.12 5.4.2.10 5.4.2.11 3.1.22.4 2.7.1.11 1.3.1.10 2.7.1.39 3.3.2.1 2.7.1.29 1.14.14.1 3.1.6.- 2.7.1.69 2.7.1.92 3.5.3.11 3.5.3.12 4.1.1.79 4.1.1.71 4.1.1.68 2.3.1.174 1.12.1.2 1.17.4.2 4.1.1.28 4.1.1.50 2.3.1.189 1.14.13.236 4.1.1.19 1.9.3.1 2.8.3.15 5.1.2.3 1.3.1.91 2.4.1.14 2.4.1.15 2.4.1.12 2.4.1.13 2.4.1.18 2.4.1.20 3.2.1.1 1.8.1.8 5.4.99.13 2.3.3.1 5.3.3.14 1.15.1.1 2.4.1.187 2.4.1.83 1.3.7.7 4.3.99.3 5.4.2.- 2.6.1.7 1.5.3.1 1.5.3.4 5.4.99.24 2.3.1.129 2.3.1.128 1.4.1.- 2.7.4.8 2.7.4.7 6.2.1.17 6.4.1.1 3.1.3.18 1.13.11.11 2.2.1.2 5.1.3.3 5.1.3.1 1.13.11.39 1.14.11.40 2.4.1.250 2.1.1.77 3.5.1.25 2.1.1.71 3.5.1.11 3.5.1.13 1.3.98.1 2.1.1.63 2.7.10.- 3.6.3.24 2.4.1.266 3.5.1.32 2.1.1.43 5.3.1.6 3.6.3.34 3.6.3.31 3.6.3.32 2.4.1.287 2.4.1.278 2.1.1.11 2.1.1.17 4.2.1.11 4.4.1.8 3.1.11.- 4.1.99.11 2.8.1.4 2.1.2.1 1.5.99.2 6.3.4.4 1.11.1.6 1.11.1.- 1.97.1.- 2.7.7.1 2.7.11.25 2.7.7.9 2.7.7.8 1.14.99.3 3.1.26.12 1.8.3.2 2.7.11.7 2.1.1.80 1.7.1.4 3.3.1.1 1.4.99.- 1.4.99.5 6.3.5.4 6.3.5.2 1.2.7.5 1.2.7.1 1.2.7.- 2.5.1.6 2.5.1.3 2.5.1.1 2.4.1.345 1.14.13.2 1.2.1.84 1.2.1.83 1.2.1.86 2.6.1.18 2.6.1.19 1.11.2.4 1.14.13.25 1.2.1.79 1.2.1.41 1.14.13.48 1.1.5.2 4.2.3.1 2.6.1.52 4.2.3.5 1.2.1.22 1.14.13.50 4.2.1.151 1.2.1.16 1.13.11.2 1.13.11.- 2.6.1.84 4.2.1.51 4.2.1.59 3.4.17.- 1.18.1.3 6.3.4.21 2.7.6.1 3.1.2.- 2.4.2.9 3.1.2.4 2.4.2.14 2.4.2.29 3.6.5.5 2.4.2.31 5.3.3.- 5.1.3.14 4.3.1.12 2.1.1.176 2.1.1.171 3.1.13.5 3.5.3.1 3.5.3.8 6.3.2.6 2.1.1.199 2.1.1.193 2.5.1.21 2.5.1.32 3.1.2.28 3.6.1.15 2.5.1.16 3.6.1.66 3.6.1.40 3.4.11.4 3.4.11.6 3.4.11.5 3.4.11.9 2.5.1.89 1.7.3.3 2.5.1.83 2.4.99.18 3.1.3.7 3.1.3.2 3.1.3.1 3.2.1.50 3.5.4.33 3.2.1.20 3.2.1.35 3.5.4.3 3.5.4.4 4.1.2.48 1.1.1.127 3.4.19.3 4.2.1.3 4.2.1.6 4.2.1.9 1.1.1.11 1.1.1.14 1.1.1.26 6.3.2.30 2.3.3.13 1.1.1.30 1.1.1.35 6.3.2.29 1.1.1.58 4.1.2.20 1.1.1.65 1.1.1.69 1.1.1.62 1.3.99.10 1.3.99.23 1.1.1.81 1.1.1.95 2.7.8.- 1.5.3.10 1.5.3.19 2.7.8.23 2.7.8.24 2.7.8.11 6.2.1.1 6.2.1.- 2.7.1.191 2.8.1.11 3.2.2.9 2.3.2.- 2.7.1.170 2.7.1.168 1.6.2.4 4.3.3.5 5.5.1.1 5.5.1.2 2.7.1.107 2.-.-.- 2.4.99.- 4.6.1.2 4.4.1.16 4.4.1.11 3.1.4.53 1.1.1.290 4.3.2.2 1.1.1.269 1.16.8.1 2.7.7.12 1.2.99.7 2.7.7.41 2.7.7.80 5.3.1.22 3.5.2.14 2.1.1.205 3.1.21.7 3.4.13.9 2.1.1.282 6.1.1.21 3.7.1.19 6.1.1.13 6.1.1.11 1.1.1.304 1.5.1.5 3.5.2.9 1.5.1.12 1.1.1.370 1.1.1.338 6.3.1.2 2.3.1.266 2.7.2.3 2.7.2.8 2.7.2.1 5.1.1.7 5.1.1.3 2.3.1.12 3.1.1.85 1.14.13.127 3.1.1.53 2.3.1.51 3.4.23.36 3.1.1.1,810 608 278 155 153 125 123 122 91 86 83 81 79 79 72 68 68 64 59 58 57 57 57 56 50 49 49 44 43 43 41 40 37 37 36 36 35 33 33 32 31 31 29 29 28 28 28 27 27 26 26 26 26 24 24 24 23 21 21 21 21 21 21 21 20 19 19 19 19 19 18 18 18 18 18 17 17 17 17 17 16 16 16 16 16 16 16 15 15 15 15 15 15 15 15 15 14 14 14 14 14 14 14 14 14 14 14 14 13 13 13 13 13 13 12 12 12 12 12 12 12 12 12 12 12 11 11 11 11 11 11 11 11 11 11 11 11 11 11 10 10 10 10 10 10 10 10 10 10 10 10 10 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'))
      assert(lines.next.start_with?('>tost,AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'))
      assert_raises(StopIteration) { lines.next }
    end

    def test_run_with_fasta_multiple_batches_and_select
      out, err = capture_io_while do
        Commands::Unipept.run(%w[pept2ec --host http://api.unipept.ugent.be --batch 2 --select ec_number >test AALTER AALER >tost AALTER])
      end
      lines = out.each_line
      assert_equal('', err)
      assert(lines.next.start_with?('fasta_header,peptide,ec_number'))
      assert(lines.next.start_with?('>test,AALTER,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4'))
      assert(lines.next.start_with?('>test,AALER,2.3.1.9 6.1.1.16 2.7.7.38 1.3.5.1 2.7.7.7 2.1.2.10 6.3.4.2 3.1.-.- 2.3.1.16 6.3.5.3 3.6.4.12 2.7.13.3 2.2.1.1 2.1.1.191 2.6.1.- 2.7.7.- 6.1.1.7 5.3.1.5 4.2.1.2 1.18.1.- 4.2.1.19 3.5.4.26 1.1.1.193 5.2.1.8 6.1.1.9 3.6.1.- 2.1.1.- 2.4.2.18 4.1.1.48 1.11.1.7 3.4.24.- 3.1.1.4 2.6.1.11 2.5.1.72 2.6.1.76 5.99.1.3 3.1.3.16 3.6.3.- 3.1.21.3 5.4.99.27 2.3.1.180 2.8.1.7 2.1.1.297 1.1.1.3 5.4.3.8 3.6.3.14 4.3.1.19 3.1.11.6 1.1.1.23 2.7.7.85 1.2.1.88 2.1.1.174 4.2.99.18 2.1.3.15 2.3.1.179 2.7.7.6 1.5.5.2 2.2.1.9 3.1.4.- 6.1.1.6 1.20.4.1 3.6.4.- 3.5.1.5 3.1.1.5 6.1.1.20 2.4.1.21 3.4.11.1 1.1.1.94 2.7.8.7 4.99.1.1 1.6.5.11 3.4.11.10 3.6.-.- 5.4.99.2 3.1.1.61 4.2.1.20 6.5.1.1 6.1.1.- 4.2.2.n1 2.7.7.59 2.7.7.89 3.2.2.27 1.2.1.27 4.2.1.126 5.1.3.11 2.7.7.42 6.1.1.17 2.9.1.1 1.14.99.29 3.6.3.17 2.1.1.198 2.5.1.75 3.5.4.2 1.2.1.- 4.1.3.27 3.1.4.16 1.4.3.16 2.6.1.9 3.4.-.- 6.5.1.2 1.-.-.- 1.14.13.- 2.6.1.16 6.3.4.19 2.4.99.16 6.2.1.5 6.1.1.18 1.5.1.20 1.2.4.1 4.1.1.20 3.1.11.5 6.1.1.1 2.7.9.1 3.1.1.31 2.3.1.234 3.4.21.- 2.2.1.6 4.2.1.46 4.1.99.22 2.1.2.9 6.3.5.1 1.3.1.9 6.1.1.5 4.2.1.1 3.6.4.13 4.1.1.31 4.1.1.47 2.7.4.1 3.1.3.12 4.2.1.24 2.7.11.1 2.6.1.62 3.1.26.- 3.1.26.4 2.5.1.61 6.3.2.13 5.3.1.24 2.3.1.- 3.4.19.12 2.7.1.25 2.3.1.157 1.8.99.2 3.4.21.53 5.3.1.9 3.7.1.3 6.3.2.2 2.5.1.17 3.4.11.2 1.3.99.- 2.7.7.23 3.5.1.4 4.3.1.3 2.7.1.71 2.3.3.9 6.3.5.5 3.6.5.- 3.1.13.1 6.3.2.4 6.3.2.1 2.1.1.197 1.3.99.1 2.7.1.130 2.7.1.100 2.7.3.9 4.1.3.40 6.1.1.19 1.7.-.- 2.3.1.30 2.7.1.23 4.1.1.86 3.6.3.41 2.3.2.31 1.11.1.15 4.2.3.4 6.1.1.3 4.2.1.113 2.4.2.21 3.1.26.3 1.8.4.11 2.4.1.- 1.4.1.13 3.1.4.52 2.7.4.16 4.2.1.17 2.7.7.4 1.4.99.6 1.4.3.5 6.1.1.2 2.4.2.17 3.4.25.1 6.3.2.- 3.1.3.- 6.2.1.3 2.7.1.180 2.7.1.167 4.6.1.1 4.3.2.1 2.7.7.56 2.7.7.70 5.1.1.8 3.1.1.- 2.3.1.20 4.1.1.32 2.4.1.25 5.4.99.15 4.2.1.33 2.7.6.5 2.1.1.182 2.7.1.- 2.7.1.2 5.99.1.2 3.2.1.23 1.1.1.100 2.1.3.- 1.5.8.4 1.4.7.1 2.1.1.228 2.3.1.94 2.3.1.41 2.3.1.39 2.7.1.15 2.7.1.30 2.7.1.24 2.3.1.181 2.4.1.182 2.4.-.- 1.3.98.3 3.6.3.28 2.7.7.3 6.3.5.9 2.5.1.- 2.6.1.37 5.3.3.2 3.1.26.8 4.2.2.- 3.2.1.21 1.1.1.25 1.1.1.157 1.17.1.8 2.10.1.1 3.2.2.4 3.2.2.- 2.7.7.18 6.3.5.11 5.3.1.23 3.5.1.2 3.5.1.- 6.3.1.1 4.3.1.7 2.3.1.47 3.6.1.7 1.2.4.4 4.1.1.36 3.4.16.4 1.13.12.4 2.4.1.129 3.2.1.- 2.6.1.1 6.2.1.30 2.1.1.72 2.1.1.33 3.2.2.23 3.5.1.94 2.4.1.227 6.3.5.7 1.3.1.- 1.2.1.38 1.2.1.12 4.2.1.109 6.3.4.18 2.4.2.4 2.4.2.- 2.1.1.107 6.3.2.5 3.1.3.6 3.5.4.16 4.2.1.- 1.1.1.133 1.1.1.37 6.3.2.10 6.3.2.17 1.2.1.2 1.5.8.3 4.3.3.7 3.6.3.4 1.1.1.267 5.4.99.- 2.7.7.77 4.1.-.- 2.3.1.1 2.1.1.298 1.5.1.2 3.5.2.3 1.1.1.- 2.3.1.29 3.1.1.29 2.3.1.35 2.7.1.35 2.7.1.26 1.14.14.18 1.8.1.9 5.4.99.12 2.4.1.173 2.4.1.57 1.4.1.2 2.7.4.9 3.1.3.48 5.1.3.2 3.5.1.28 3.6.3.25 2.1.1.37 4.2.1.10 3.1.11.1 3.5.1.98 2.7.7.2 4.1.2.- 2.7.11.5 2.7.-.- 1.2.1.70 4.2.1.70 6.1.1.4 2.7.6.3 2.4.2.19 1.4.4.2 1.6.99.5 5.99.1.4 3.6.1.31 2.4.99.17 3.1.3.3 3.1.3.5 3.2.1.52 2.5.1.48 3.5.4.25 6.6.1.2 1.3.3.4 1.1.1.49 1.1.1.40 3.4.21.92 2.8.1.13 3.6.3.8 3.6.3.3 2.7.3.- 2.7.7.48 2.7.7.72 2.7.7.60 2.7.7.65 1.3.5.4 6.1.1.22 6.1.1.15 6.1.1.10 2.7.2.4 5.1.1.1 4.1.99.3 1.7.99.4 2.3.1.31 3.-.-.- 2.7.1.33 2.7.1.36 3.1.6.1 2.7.1.40 2.7.1.45 2.3.1.225 1.14.-.- 4.1.1.37 4.1.1.23 4.1.1.49 1.1.2.3 2.7.7.87 1.7.1.13 1.8.1.4 5.4.99.16 1.17.99.6 2.4.1.54 5.4.2.7 5.4.99.25 5.4.99.61 2.7.4.23 1.4.1.1 2.7.4.25 5.1.1.11 6.2.1.13 1.1.99.14 1.13.11.27 3.5.1.10 3.6.3.54 3.5.1.46 5.3.1.1 4.2.1.32 1.3.8.7 2.1.1.14 1.3.8.4 4.4.1.1 3.7.1.- 4.1.99.17 3.5.1.87 3.5.1.88 2.8.1.8 2.1.2.3 2.1.2.2 1.14.11.- 6.3.5.- 2.4.1.301 1.4.3.- 1.2.7.8 5.4.4.2 1.14.13.7 1.17.7.3 4.2.1.75 1.2.1.10 4.2.1.138 4.2.1.136 2.6.1.83 2.6.1.85 6.3.4.13 3.1.2.6 2.4.2.10 1.1.-.- 2.4.2.30 2.1.1.166 1.6.99.3 3.1.26.5 2.1.1.131 6.3.2.8 6.3.2.9 5.1.99.6 3.2.1.141 2.1.1.192 2.7.13.- 2.5.1.10 3.6.1.11 2.5.1.18 2.5.1.15 3.4.11.- 4.6.1.12 2.5.1.78 2.5.1.47 3.5.4.10 3.5.4.19 3.2.1.28 3.5.4.9 4.2.1.8 1.1.1.22 1.1.1.27 1.1.1.47 6.3.2.12 6.3.3.2 6.3.3.3 1.1.1.60 1.17.1.4 1.2.1.3 3.6.5.n1 2.7.1.165 2.3.2.3 2.7.1.148 3.4.14.- 3.4.14.4 4.3.3.6 3.6.3.5 1.4.1.21 1.1.1.262 3.1.4.11 2.7.7.49 5.3.1.16 2.1.1.200 3.6.4.4 2.1.1.269 6.1.1.23 6.1.1.14 3.5.2.5 3.5.1.1 2.3.1.15 5.1.1.- 4.1.99.1 3.1.1.2 3.1.1.3 2.1.3.12 5.4.2.12 5.4.2.10 5.4.2.11 3.1.22.4 2.7.1.11 1.3.1.10 2.7.1.39 3.3.2.1 2.7.1.29 1.14.14.1 3.1.6.- 2.7.1.69 2.7.1.92 3.5.3.11 3.5.3.12 4.1.1.79 4.1.1.71 4.1.1.68 2.3.1.174 1.12.1.2 1.17.4.2 4.1.1.28 4.1.1.50 2.3.1.189 1.14.13.236 4.1.1.19 1.9.3.1 2.8.3.15 5.1.2.3 1.3.1.91 2.4.1.14 2.4.1.15 2.4.1.12 2.4.1.13 2.4.1.18 2.4.1.20 3.2.1.1 1.8.1.8 5.4.99.13 2.3.3.1 5.3.3.14 1.15.1.1 2.4.1.187 2.4.1.83 1.3.7.7 4.3.99.3 5.4.2.- 2.6.1.7 1.5.3.1 1.5.3.4 5.4.99.24 2.3.1.129 2.3.1.128 1.4.1.- 2.7.4.8 2.7.4.7 6.2.1.17 6.4.1.1 3.1.3.18 1.13.11.11 2.2.1.2 5.1.3.3 5.1.3.1 1.13.11.39 1.14.11.40 2.4.1.250 2.1.1.77 3.5.1.25 2.1.1.71 3.5.1.11 3.5.1.13 1.3.98.1 2.1.1.63 2.7.10.- 3.6.3.24 2.4.1.266 3.5.1.32 2.1.1.43 5.3.1.6 3.6.3.34 3.6.3.31 3.6.3.32 2.4.1.287 2.4.1.278 2.1.1.11 2.1.1.17 4.2.1.11 4.4.1.8 3.1.11.- 4.1.99.11 2.8.1.4 2.1.2.1 1.5.99.2 6.3.4.4 1.11.1.6 1.11.1.- 1.97.1.- 2.7.7.1 2.7.11.25 2.7.7.9 2.7.7.8 1.14.99.3 3.1.26.12 1.8.3.2 2.7.11.7 2.1.1.80 1.7.1.4 3.3.1.1 1.4.99.- 1.4.99.5 6.3.5.4 6.3.5.2 1.2.7.5 1.2.7.1 1.2.7.- 2.5.1.6 2.5.1.3 2.5.1.1 2.4.1.345 1.14.13.2 1.2.1.84 1.2.1.83 1.2.1.86 2.6.1.18 2.6.1.19 1.11.2.4 1.14.13.25 1.2.1.79 1.2.1.41 1.14.13.48 1.1.5.2 4.2.3.1 2.6.1.52 4.2.3.5 1.2.1.22 1.14.13.50 4.2.1.151 1.2.1.16 1.13.11.2 1.13.11.- 2.6.1.84 4.2.1.51 4.2.1.59 3.4.17.- 1.18.1.3 6.3.4.21 2.7.6.1 3.1.2.- 2.4.2.9 3.1.2.4 2.4.2.14 2.4.2.29 3.6.5.5 2.4.2.31 5.3.3.- 5.1.3.14 4.3.1.12 2.1.1.176 2.1.1.171 3.1.13.5 3.5.3.1 3.5.3.8 6.3.2.6 2.1.1.199 2.1.1.193 2.5.1.21 2.5.1.32 3.1.2.28 3.6.1.15 2.5.1.16 3.6.1.66 3.6.1.40 3.4.11.4 3.4.11.6 3.4.11.5 3.4.11.9 2.5.1.89 1.7.3.3 2.5.1.83 2.4.99.18 3.1.3.7 3.1.3.2 3.1.3.1 3.2.1.50 3.5.4.33 3.2.1.20 3.2.1.35 3.5.4.3 3.5.4.4 4.1.2.48 1.1.1.127 3.4.19.3 4.2.1.3 4.2.1.6 4.2.1.9 1.1.1.11 1.1.1.14 1.1.1.26 6.3.2.30 2.3.3.13 1.1.1.30 1.1.1.35 6.3.2.29 1.1.1.58 4.1.2.20 1.1.1.65 1.1.1.69 1.1.1.62 1.3.99.10 1.3.99.23 1.1.1.81 1.1.1.95 2.7.8.- 1.5.3.10 1.5.3.19 2.7.8.23 2.7.8.24 2.7.8.11 6.2.1.1 6.2.1.- 2.7.1.191 2.8.1.11 3.2.2.9 2.3.2.- 2.7.1.170 2.7.1.168 1.6.2.4 4.3.3.5 5.5.1.1 5.5.1.2 2.7.1.107 2.-.-.- 2.4.99.- 4.6.1.2 4.4.1.16 4.4.1.11 3.1.4.53 1.1.1.290 4.3.2.2 1.1.1.269 1.16.8.1 2.7.7.12 1.2.99.7 2.7.7.41 2.7.7.80 5.3.1.22 3.5.2.14 2.1.1.205 3.1.21.7 3.4.13.9 2.1.1.282 6.1.1.21 3.7.1.19 6.1.1.13 6.1.1.11 1.1.1.304 1.5.1.5 3.5.2.9 1.5.1.12 1.1.1.370 1.1.1.338 6.3.1.2 2.3.1.266 2.7.2.3 2.7.2.8 2.7.2.1 5.1.1.7 5.1.1.3 2.3.1.12 3.1.1.85 1.14.13.127 3.1.1.53 2.3.1.51 3.4.23.36 3.1.1.1'))
      assert(lines.next.start_with?('>tost,AALTER,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4'))
      assert_raises(StopIteration) { lines.next }
    end

    def test_run_with_fasta_multiple_batches_json
      out, err = capture_io_while do
        Commands::Unipept.run(%w[pept2ec --host http://api.unipept.ugent.be --batch 2 --format json >test AALTER AALER >tost AALTER])
      end
      lines = out.each_line
      assert_equal('', err)
      output = lines.to_a.join('').chomp
      assert(output.start_with?('['))
      assert(output.end_with?(']'))
      assert(!output.include?('}{'))
      assert(output.include?('fasta_header'))
    end

    def test_run_with_fasta_multiple_batches_xml
      out, err = capture_io_while do
        Commands::Unipept.run(%w[pept2ec --host http://api.unipept.ugent.be --batch 2 --format xml >test AALTER AALER >tost AALTER])
      end
      lines = out.each_line
      assert_equal('', err)
      output = lines.to_a.join('').chomp
      assert(output.start_with?('<results>'))
      assert(output.end_with?('</results>'))
      assert(output.include?('<fasta_header>'))
    end

    def test_run_with_empty_peptide
      out, err = capture_io_while do
        Commands::Unipept.run(%w[pept2ec --host http://api.unipept.ugent.be AKVYSKY])
      end
      lines = out.each_line
      assert_equal('', err)
      assert_raises(StopIteration) { lines.next }
    end

    def test_run_with_empty_and_existing_peptide
      out, err = capture_io_while do
        Commands::Unipept.run(%w[pept2ec --host http://api.unipept.ugent.be AKVYSKY AALTER])
      end
      lines = out.each_line
      assert_equal('', err)
      assert(lines.next.start_with?('peptide,total_protein_count,ec_number,ec_protein_count'))
      assert(lines.next.start_with?('AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'))
      assert_raises(StopIteration) { lines.next }
    end

    def test_run_existing_peptide_no_ec_numbers
      out, err = capture_io_while do
        Commands::Unipept.run(%w[pept2ec --host http://api.unipept.ugent.be MDGTEYIIVK])
      end
      lines = out.each_line
      assert_equal('', err)
      assert(lines.next.start_with?('peptide,total_protein_count'))
      assert(lines.next.start_with?('MDGTEYIIVK,4'))
      assert_raises(StopIteration) { lines.next }
    end
  end
end
