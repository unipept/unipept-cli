#!/usr/bin/env ruby
require 'typhoeus'
require 'cri'

Signal.trap("PIPE", "EXIT")
Signal.trap("INT", "EXIT")

def get_uniprot_entry(arg, fasta = false)
  resp = Typhoeus.get("http://www.uniprot.org/uniprot/#{arg}.fasta")
  if resp.success?
    if fasta
      puts resp.response_body
    else
      puts resp.response_body.lines.map(&:chomp)[1..-1].join("")
    end
  end
end

root_cmd = Cri::Command.new_basic_root.modify do
  name 'uniprot'
  description 'Download protein sequence from uniprot.org'
  required :f, :format, "specify output format (available: fasta, plain)"
  run do |opts, args, cmd|
    fasta = opts[:format] == 'fasta'
    iterator = args.empty? ? $stdin.each_line : args
    iterator.each do |pept|
      get_uniprot_entry(pept.chomp, fasta)
    end
  end
end

# run_this runs this command without subcommands! Absolutely needed here
root_cmd.run_this(ARGV)
