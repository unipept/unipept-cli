#!usr/bin/env ruby

require 'cri'
require 'typhoeus'
require 'yaml'
require 'json'
require 'fileutils'

require_relative '../lib/unipept'

# Prevent broken pipe errors
Signal.trap("PIPE", "EXIT")
Signal.trap("INT", "EXIT")

root_cmd = Cri::Command.new_basic_root.modify do
  name 'unipept'
  flag :v, :version, "print version"
  flag :q, :quiet, "don't show update messages"
  option :i, :input, "input file", :argument => :required
  option :o, :output, "output file", :argument => :required
  option :f, :format, "output format (available: #{Unipept::Formatter.available.join "," }) (default: #{Unipept::Formatter.default})", :argument => :required

  # Configuration options
  option nil, "host", "Override host setting", argument: :required
  option :b, "batch_size", "Override batch_size setting", argument: :required

  run do |opts, args, cmd|
    if opts[:version]
      puts File.read(File.join(File.dirname(__FILE__), "..", "VERSION"))
    end
  end
end

root_cmd.define_command('config') do
  usage 'config attr [value]'

  run do |opts, args, cmd|
    config = Unipept::Configuration.new
    if args.size > 1
      config[args.first] = args[1]
      config.save
    elsif args.size == 1
      puts config[args.first]
    end
  end

end

root_cmd.define_command('pept2taxa') do
  usage       'pept2taxa [options]'
  aliases     :s
  summary     'Single Peptide Search'
  description 'Search Unipept for the given peptide and return taxons'

  flag :e, :equate, "equate I and L"
  option :s, :select, "select the attributes", :argument => :required, :multiple => true
  option :a, :extra, "Show full lineage"
  option :x, :xml, "Download taxonomy from NCBI as xml (specify output filename)", :argument => :required

  runner Unipept::Commands::Pept2taxa
end

root_cmd.define_command('pept2lca') do
  usage       'pept2lca [options]'
  aliases     :l
  summary     'Give lowest common ancestor for given peptide'
  description 'Search Unipept for the given peptide and return the lowest common ancestor'

  flag :e, :equate, "equate I and L"
  option :s, :select, "select the attributes", :argument => :required, :multiple => true
  option :a, :extra, "Show full lineage"

  runner Unipept::Commands::Pept2lca
end

root_cmd.define_command('taxa2lca') do
  usage       'taxa2lca [options]'
  aliases     :t
  summary     'Give lowest common ancestor for taxon ids'
  description 'Search Unipept for the given taxon ids and return the lowest common ancestor'

  option :s, :select, "select the attributes", :argument => :required, :multiple => true
  option :a, :extra, "Show full lineage"

  runner Unipept::Commands::Taxa2lca
end

root_cmd.define_command('pept2prot') do
  usage       'pept2prot [options]'
  aliases     :p
  summary     'Give protein information for given peptides'
  description 'Search Unipept for the given peptides and return the lowest common ancestor'

  flag :e, :equate, "equate I and L"
  option :s, :select, "select the attributes", :argument => :required, :multiple => true
  option :x, :xml, "download uniprot record in specified directory", :argument => :required
  flag :a, :extra, "include all information. WARNING: will take much longer!"

  runner Unipept::Commands::Pept2prot
end

root_cmd.define_command('taxonomy') do
  usage       'taxonomy [options]'
  aliases     :tax
  summary     'Give NCBI taxonomy information on given input taxon ids'
  description 'Returns information for each input taxon id'

  option :s, :select, "select the attributes", :argument => :required, :multiple => true
  flag :a, :extra, "include all information. WARNING: will take much longer!"

  runner Unipept::Commands::Taxonomy
end

root_cmd.run(ARGV)
